[{"/Users/user/Downloads/01-starting-project/src/index.js":"1","/Users/user/Downloads/01-starting-project/src/App.js":"2","/Users/user/Downloads/01-starting-project/src/components/Login/Login.js":"3","/Users/user/Downloads/01-starting-project/src/components/Home/Home.js":"4","/Users/user/Downloads/01-starting-project/src/components/MainHeader/MainHeader.js":"5","/Users/user/Downloads/01-starting-project/src/components/MainHeader/Navigation.js":"6","/Users/user/Downloads/01-starting-project/src/components/UI/Card/Card.js":"7","/Users/user/Downloads/01-starting-project/src/components/UI/Button/Button.js":"8","/Users/user/Downloads/01-starting-project/src/components/counter/Counter.jsx":"9"},{"size":169,"mtime":1616640728000,"results":"10","hashOfConfig":"11"},{"size":1594,"mtime":1666830009084,"results":"12","hashOfConfig":"11"},{"size":4277,"mtime":1666986838271,"results":"13","hashOfConfig":"11"},{"size":250,"mtime":1616640728000,"results":"14","hashOfConfig":"11"},{"size":368,"mtime":1616640728000,"results":"15","hashOfConfig":"11"},{"size":571,"mtime":1616640728000,"results":"16","hashOfConfig":"11"},{"size":218,"mtime":1616640728000,"results":"17","hashOfConfig":"11"},{"size":353,"mtime":1616640728000,"results":"18","hashOfConfig":"11"},{"size":721,"mtime":1666826071406,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1h2dbb4",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/user/Downloads/01-starting-project/src/index.js",[],["40","41"],"/Users/user/Downloads/01-starting-project/src/App.js",["42","43"],"import React, { useEffect, useState } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport Counter from './components/counter/Counter';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); /// for modal window\n\n  // const [state, setState] = useState(0)\n\n  // const add = () => {\n  //   setState((prevState) => prevState + 1)\n  // }\n\n  useEffect(() => {\n    const storedUserLoggedInfo = localStorage.getItem('islogin') // save a localstorage\n\n    if (storedUserLoggedInfo === '1') {\n      isLoggedIn(true)\n    }\n  }, [])\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('islogin')\n  };\n\n  return (\n    <React.Fragment> {/*  Фрагменты позволяют группировать список дочерних элементов без добавления дополнительных узлов  */}\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />} {/* this terms false working Login component  */}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}  {/* if when terms true working this  */}\n        {/* <button onClick={add}>add</button> */}\n      </main>\n      {/* <Counter/> */}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/user/Downloads/01-starting-project/src/components/Login/Login.js",["44"],"/Users/user/Downloads/01-starting-project/src/components/Home/Home.js",[],"/Users/user/Downloads/01-starting-project/src/components/MainHeader/MainHeader.js",[],"/Users/user/Downloads/01-starting-project/src/components/MainHeader/Navigation.js",[],"/Users/user/Downloads/01-starting-project/src/components/UI/Card/Card.js",[],"/Users/user/Downloads/01-starting-project/src/components/UI/Button/Button.js",[],"/Users/user/Downloads/01-starting-project/src/components/counter/Counter.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":23,"column":6,"nodeType":"55","endLine":23,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":91,"column":6,"nodeType":"55","endLine":91,"endColumn":32,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Counter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["61"],"React Hook useEffect has missing dependencies: 'emailState.emailValue' and 'passwordState.passwordValue'. Either include them or remove the dependency array.",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [isLoggedIn]",{"range":"67","text":"68"},"Update the dependencies array to be: [emailIsValid, emailState.emailValue, isPwdValue, passwordState.passwordValue]",{"range":"69","text":"70"},[656,658],"[isLoggedIn]",[2313,2339],"[emailIsValid, emailState.emailValue, isPwdValue, passwordState.passwordValue]"]